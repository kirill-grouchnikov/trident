/*
 * Copyright 2008-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.nemerosa:versioning:2.4.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.0"
    }
}

//Git tag/branch based versioning
apply plugin: 'net.nemerosa.versioning'

versioning {
    releaseMode = { nextTag, lastTag, currentTag, extension ->
        currentTag ? "${currentTag}" : "${nextTag}-SNAPSHOT"
    }
}

project.extensions.isRelease = versioning.info.branchType == 'release' && !versioning.info.display.contains("SNAPSHOT")
project.extensions.isFeature = versioning.info.branchType == 'feature'
version = project.extensions.isFeature ? '' + versioning.info.branchId + '-SNAPSHOT' : versioning.info.display
version = System.properties.getProperty("VERSION") ?: version


apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group="org.pushingpixels"

repositories {
    jcenter()
}

dependencies {
    testCompile "junit:junit:4.8.2"
}

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
            'Implementation-Version': version,
            'Implementation-Vendor': 'org.pushingpixels',
            'Implementation-Title': 'Trident'
        )
    }
}

apply plugin: "com.github.johnrengelman.shadow"
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task testJar(type: ShadowJar) {
    classifier = 'tests'
    from sourceSets.test.output
    configurations = [project.configurations.testRuntime]
}

apply from: 'deploy.gradle'

